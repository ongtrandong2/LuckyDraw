@using System.Reflection.Metadata
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveServer


<!-- Link to open map -->
<a href="javascript:void(0);" @onclick="ShowMap">
    @DecimalToDMS(Latitude, true)@("  ")@DecimalToDMS(Longitude, false)
</a>

<!-- Modal for displaying the map -->
@if (showModal)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <iframe width="100%"
                height="450"
                style="border:0"
                loading="lazy"
                src="@GetGoogleMapUrl()">
            </iframe>

            <button class="btn btn-primary mt-3" @onclick="CloseModal">Close</button>
        </div>
    </div>
}

@code {
    [Parameter] public double Latitude { get; set; }
    [Parameter] public double Longitude { get; set; }
    private bool showModal = false;

    // Method to display the modal
    private void ShowMap()
    {
        showModal = true;
    }

    // Method to close the modal
    private void CloseModal()
    {
        showModal = false;
    }

    // Method to generate the Google Maps link for a location
    private string GetGoogleMapUrl()
    {
        return $"http://maps.google.com/maps?q={Latitude},{Longitude}&z=16&output=embed";
    }

    public string DecimalToDMS(double decimalDegrees, bool isLatitude)
    {
        // Calculate degrees, minutes, and seconds
        int degrees = (int)Math.Floor(decimalDegrees);
        double minutesDecimal = (decimalDegrees - degrees) * 60;
        int minutes = (int)Math.Floor(minutesDecimal);
        double seconds = (minutesDecimal - minutes) * 60;

        // Determine direction (N/S for latitude, E/W for longitude)
        string direction = "";
        if (isLatitude)
        {
            direction = (decimalDegrees >= 0) ? "N" : "S";
        }
        else
        {
            direction = (decimalDegrees >= 0) ? "E" : "W";
        }

        // Return the formatted DMS string
        return $"{Math.Abs(degrees)}°{minutes}'{seconds:F1}\"{direction}";
    }

}

<style>
    /* Modal Overlay Styles */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        width: 80%;
        max-width: 800px;
    }
</style>
