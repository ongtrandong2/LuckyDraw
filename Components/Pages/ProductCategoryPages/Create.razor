@page "/product-categories/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using PGAdmin.Data
@using PGAdmin.Models
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@attribute [Authorize]

<PageHeader PageTitle="Quản lý danh mục sản phẩm"
            Breadcrumbs="GetBreadcrumbs()"/>

<PageTitle>Thêm mới danh mục sản phẩm</PageTitle>

<h4 class="text-primary my-4">Thêm mới danh mục sản phẩm</h4>
<EditForm method="post" Model="ProductCategory" OnValidSubmit="AddProductCategory" FormName="create" Enhance>
    <DataAnnotationsValidator/>
    <ValidationSummary role="alert"/>
    <div class="container row px-0">
        <div class="col col-12 col-md-6 mb-3">
            <label for="name" class="form-label">Tên danh mục</label>
            <InputText id="name" @bind-Value="ProductCategory.Name" class="form-control"/>
            <ValidationMessage For="() => ProductCategory.Name" class="text-danger"/>
        </div>
        <div class="col col-12 col-md-6 mb-3">
            <label for="note" class="form-label">Ghi chú</label>
            <InputText id="note" @bind-Value="ProductCategory.Note" class="form-control"/>
            <ValidationMessage For="() => ProductCategory.Note" class="text-danger"/>
        </div>
        <div class="col col-8"></div>
        <div class="col col-4 text-end mb-4 mt-2">
            <button class="btn btn-light bg-white border border-black border-opacity-25 mx-2 px-5 py-2">
                <a href="/product-categories" class="text-decoration-none text-black">Hủy bỏ</a>
            </button>
            <button type="submit" class="btn btn-primary ms-2 px-5 py-2">Lưu</button>
        </div>
    </div>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private ProductCategory ProductCategory { get; set; } = new();

    private async Task AddProductCategory()
    {
        using var context = DbFactory.CreateDbContext();
        context.ProductCategories.Add(ProductCategory);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/product-categories");
    }

    private List<PageHeader.BreadcrumbItem> GetBreadcrumbs()
    {
        return new List<PageHeader.BreadcrumbItem>
        {
            new() { Name = "Danh sách danh mục sản phẩm", Url = "/product-categories" },
            new() { Name = "Thêm mới danh mục sản phẩm", Url = "/product-categories/create" }
        };
    }
}
